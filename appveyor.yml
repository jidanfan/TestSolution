version: 1.0.{build} 
build_cloud:
- Docker
# - Process
image: Linux
configuration: Release 

#services:
#  - docker
#environment:
#  matrix:
#  - job_name: dev_job 
#    APPVEYOR_BUILD_WORKER_IMAGE: net6.0
#  - job_name: tag_job 
matrix:
  fast_finish: true
#  docker_pull: always
  #APPVEYOR_REPO_TAG: true  

branches:
  only:    
    - master
#install: 

#for:
#-
#  matrix:
#    only:
#      - job_name: test
#  test_script:
#  - ps: dotnet test "XUnitTestProject1/XUnitTestProject1.csproj" --configuration Release--no-build

build: off
#build_script:
#- ps: >- 
#    echo "INFO: APPVEYOR_BUILD_WORKER_IMAGE: ${Env:APPVEYOR_BUILD_WORKER_IMAGE}"

#    echo "INFO: cloud_type: ${Env:CLOUD_TYPE}"

#    echo "INFO: build_cloud: ${Env:BUILD_COULD}"
    
#    echo "INFO: APPVEYOR: ${Env:APPVEYOR}"

#    echo "INFO: CI: ${Env:CI}"

#    echo "APPVEYOR_REPO_TAG: ${Env:APPVEYOR_REPO_TAG}"
      
#    echo "APPVEYOR_REPO_BRANCH: ${Env:APPVEYOR_REPO_BRANCH} "

#    echo "INFO: tag name: ${Env:APPVEYOR_REPO_TAG_NAME}" 

#    if (${Env:APPVEYOR_REPO_TAG} -eq $false) {
#        docker ps
#    }
#    else {
#        echo "not eq"
#    }
    #if((docker images -q appveyor:1.0 | wc -l ) -eq 2){
    #  docker ps
    #}
      
test: off

#for:
#-
#  matrix:
#    only:
#      - job_name: dev_job 
#  build_script:
#  - ps: dotnet --info
#-
#  matrix:
#    only:
#      - job_name: tag_job
#  build_script:
#  - ps: docker ps
     

#    dotnet nuget add source https://ci.appveyor.com/nuget/jidanfan-6k0dhkdnjc2w   -n jidanfan -u %nuget_user% -p %nuget_password% --store-password-in-clear-text
#build:
#  project: WebApplication1.sln
#  verbosity: minimal

#test_script:
#- ps: dotnet test "XUnitTestProject1/XUnitTestProject1.csproj" --configuration Release--no-build

deploy_script:
- ps: >- 
    docker version
    # $imgName="testimg"

    # if (${Env:APPVEYOR_REPO_TAG} -eq $true)
    # {
    #    docker build -t ${imgName}:$Env:APPVEYOR_REPO_TAG_NAME -f ./WebApplication1/Dockerfile .
    #    k3d image import ${imgName}:$Env:APPVEYOR_REPO_TAG_NAME -c main
    #    kubectl set image deployment/webtest webtest=${imgName}:$Env:APPVEYOR_REPO_TAG_NAME 
    # }
    # elseif((docker images -q ${imgName}:1.0 | wc -l ) -eq 0)
    # {
    #     docker build -t ${imgName}:1.0 -f ./WebApplication1/Dockerfile .
    # }
     
 
#on_finish:
#  - ps: docker ps